{
    "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":"1.0.0.0",
    "parameters":{
       "location":{
          "defaultValue":"[resourceGroup().location]",
          "type":"String",
          "metadata":{
             "description":"Location for all resources."
          }
       },
       "dnsLoadBalancer":{
          "defaultValue":"uipath",
          "type":"String",
          "metadata":{
             "description":"URL for the load balancer"
          }
       },
       "serverNodeCount":{
          "defaultValue":1,
          "allowedValues":[
             1,
             3,
             5,
             7,
             9,
             11,
             13,
             15
          ],
          "minValue":1,
          "maxValue":15,
          "type":"Int",
          "metadata":{
             "description":"Number of server nodes (? or less). Should be an odd number. If single node ignored?"
          }
       },
       "serverNodeInstanceType":{
          "defaultValue":"Standard_D16_v3",
          "type":"String",
          "metadata":{
             "description":"Instance type of a server node"
          }
       },
       "agentNodeCount":{
          "defaultValue":0,
          "minValue":0,
          "maxValue":100,
          "type":"Int",
          "metadata":{
             "description":"Number of agent nodes (? or less)"
          }
       },
       "agentNodeInstanceType":{
          "defaultValue":"Standard_D16_v3",
          "type":"String",
          "metadata":{
             "description":"Instance type of an agent node"
          }
       },
       "gpuNodeCount":{
          "defaultValue":0,
          "minValue":0,
          "maxValue":100,
          "type":"Int",
          "metadata":{
             "description":"Number of agent nodes with GPU capabilities (? or less)"
          }
       },
       "gpuNodeInstanceType":{
          "defaultValue":"Standard_NC12s_v2",
          "type":"String",
          "metadata":{
             "description":"Instance type of a gpu agent node"
          }
       },
       "SQLAdminUsername":{
          "defaultValue":"",
          "type":"String",
          "metadata":{
             "description":"SQL Azure DB administrator  user login"
          }
       },
       "SQLAdminPassword":{
          "defaultValue":"",
          "type":"SecureString",
          "metadata":{
             "description":"Database admin user password"
          }
       },
       "adminUsername":{
          "defaultValue":"",
          "type":"String",
          "metadata":{
             "description":"User login"
          }
       },
       "adminPassword":{
          "defaultValue":"",
          "type":"SecureString",
          "metadata":{
             "description":"User password"
          }
       },
       "automationSuiteVersion":{
          "defaultValue":"",
          "type":"String",
          "metadata":{
             "description":"Version of UiPath Automation Suite to be installed."
          }
       },
       "orchestratorInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether Orchestrator should be installed."
          }
       },
       "actionCenterInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether Action Center should be installed."
          }
       },
       "testManagerInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether Test Manager should be installed."
          }
       },
       "insightsInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether Insights should be installed."
          }
       },
       "automationHubInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether Automation Hub should be installed."
          }
       },
       "automationOpsInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether Automation Ops should be installed."
          }
       },
       "appsInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether Apps should be installed."
          }
       },
       "aiCenterInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether AI Center should be installed."
          }
       },
       "taskMiningInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether Task Mining should be installed."
          }
       },
       "documentUnderstandingInstallFlag":{
          "defaultValue":false,
          "type":"Bool",
          "metadata":{
             "description":"Flag which determines whether Document Understanding should be installed."
          }
       },
       "tagsByResource":{
          "defaultValue":{"Microsoft.Compute/virtualMachines":{"AlwaysPoweredOn":"False","Owner":"infra@uipath.com","Project":"Service Fabric"},"Microsoft.Compute/virtualMachineScaleSets":{"AlwaysPoweredOn":"False","Owner":"infra@uipath.com","Project":"Service Fabric"}},
          "type":"Object"
       }
    },
    "variables":{
       "databaseTemplateUri":"https://raw.githubusercontent.com/hteo1337/infra-as/main/LinkedTemplate/database.json",
       "networkTemplateUri":"https://raw.githubusercontent.com/hteo1337/infra-as/main/LinkedTemplate/network.json",
       "computeTemplateUri":"https://raw.githubusercontent.com/hteo1337/infra-as/main/LinkedTemplate/compute.json",
       "dnsTemplateUri":"https://raw.githubusercontent.com/hteo1337/infra-as/main/LinkedTemplate/dns.json",
       "vaultTemplateUri":"https://raw.githubusercontent.com/hteo1337/infra-as/main/LinkedTemplate/vault.json",
       "scriptUris":{
          "diskResize":"https://raw.githubusercontent.com/hteo1337/infra-as/main/scripts/diskresize.sh",
          "installPrereq":"https://raw.githubusercontent.com/hteo1337/infra-as/main/scripts/installPrereq.sh"
       },
       "baseName":"[substring(parameters('dnsLoadBalancer'), 0, 5)]"
    },
    "functions":[
       
    ],
    "resources":[
       {
          "type":"Microsoft.Resources/deployments",
          "apiVersion":"2019-10-01",
          "name":"Vault",
          "tags":"[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deployments'), parameters('tagsByResource')['Microsoft.Resources/deployments'], json('{}')) ]",
          "properties":{
             "mode":"Incremental",
             "templateLink":{
                "uri":"[variables('vaultTemplateUri')]"
             },
             "parameters":{
                "SQLAdminUsername":{
                   "value":"[parameters('SQLAdminUsername')]"
                },
                "SQLAdminPassword":{
                   "value":"[parameters('SQLAdminPassword')]"
                },
                "adminUsername":{
                   "value":"[parameters('adminUsername')]"
                },
                "adminPassword":{
                   "value":"[parameters('adminPassword')]"
                },
                "baseName":{
                   "value":"[variables('baseName')]"
                },
                "location":{
                   "value":"[parameters('location')]"
                },
                "tagsByResource":{
                   "value":"[parameters('tagsByResource')]"
                }
             }
          }
       },
       {
          "type":"Microsoft.Resources/deployments",
          "apiVersion":"2019-10-01",
          "name":"Database",
          "dependsOn":[
             "[resourceId('Microsoft.Resources/deployments', 'Network')]",
             "[resourceId('Microsoft.Resources/deployments', 'Vault')]"
          ],
          "tags":"[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deployments'), parameters('tagsByResource')['Microsoft.Resources/deployments'], json('{}')) ]",
          "properties":{
             "mode":"Incremental",
             "templateLink":{
                "uri":"[variables('databaseTemplateUri')]"
             },
             "parameters":{
                "location":{
                   "value":"[parameters('location')]"
                },
                "SQLServerName":{
                   "value":"[concat(substring(parameters('dnsLoadBalancer'),0,4),'sql')]"
                },
                "SQLServerAdminLogin":{
                   "reference":{
                      "keyVault":{
                         "id":"[reference('Vault').outputs.KVResourceId.value]"
                      },
                      "secretName":"SQLAdminUsername"
                   }
                },
                "SQLServerAdminPassword":{
                   "reference":{
                      "keyVault":{
                         "id":"[reference('Vault').outputs.KVResourceId.value]"
                      },
                      "secretName":"SQLAdminPassword"
                   }
                },
                "tagsByResource":{
                   "value":"[parameters('tagsByResource')]"
                }
             }
          }
       },
       {
          "type":"Microsoft.Resources/deployments",
          "apiVersion":"2019-10-01",
          "name":"Network",
          "tags":"[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deployments'), parameters('tagsByResource')['Microsoft.Resources/deployments'], json('{}')) ]",
          "properties":{
             "mode":"Incremental",
             "templateLink":{
                "uri":"[variables('networkTemplateUri')]"
             },
             "parameters":{
                "location":{
                   "value":"[parameters('location')]"
                },
                "dnsLoadBalancer":{
                   "value":"[parameters('dnsLoadBalancer')]"
                },
                "baseName":{
                   "value":"[variables('baseName')]"
                },
                "tagsByResource":{
                   "value":"[parameters('tagsByResource')]"
                }
             }
          }
       },
       {
          "type":"Microsoft.Resources/deployments",
          "apiVersion":"2019-10-01",
          "name":"Compute",
          "dependsOn":[
             "[resourceId('Microsoft.Resources/deployments', 'Database')]",
             "[resourceId('Microsoft.Resources/deployments', 'Vault')]"
          ],
          "tags":"[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deployments'), parameters('tagsByResource')['Microsoft.Resources/deployments'], json('{}')) ]",
          "properties":{
             "mode":"Incremental",
             "templateLink":{
                "uri":"[variables('computeTemplateUri')]"
             },
             "parameters":{
                "location":{
                   "value":"[parameters('location')]"
                },
                "serverNodeCount":{
                   "value":"[parameters('serverNodeCount')]"
                },
                "agentNodeCount":{
                   "value":"[parameters('agentNodeCount')]"
                },
                "gpuNodeCount":{
                   "value":"[parameters('gpuNodeCount')]"
                },
                "serverNodeInstanceType":{
                   "value":"[parameters('serverNodeInstanceType')]"
                },
                "agentNodeInstanceType":{
                   "value":"[parameters('agentNodeInstanceType')]"
                },
                "gpuNodeInstanceType":{
                   "value":"[parameters('gpuNodeInstanceType')]"
                },
                "baseName":{
                   "value":"[variables('baseName')]"
                },
                "VMAdminUserName":{
                   "reference":{
                      "keyVault":{
                         "id":"[reference('Vault').outputs.KVResourceId.value]"
                      },
                      "secretName":"adminUsername"
                   }
                },
                "VMAdminPassword":{
                   "reference":{
                      "keyVault":{
                         "id":"[reference('Vault').outputs.KVResourceId.value]"
                      },
                      "secretName":"adminPassword"
                   }
                },
                "automationSuiteVersion":{
                   "value":"[parameters('automationSuiteVersion')]"
                },
                "orchestratorInstallFlag":{
                   "value":"[parameters('orchestratorInstallFlag')]"
                },
                "actionCenterInstallFlag":{
                   "value":"[parameters('actionCenterInstallFlag')]"
                },
                "testManagerInstallFlag":{
                   "value":"[parameters('testManagerInstallFlag')]"
                },
                "insightsInstallFlag":{
                   "value":"[parameters('insightsInstallFlag')]"
                },
                "automationHubInstallFlag":{
                   "value":"[parameters('automationHubInstallFlag')]"
                },
                "automationOpsInstallFlag":{
                   "value":"[parameters('automationOpsInstallFlag')]"
                },
                "appsInstallFlag":{
                   "value":"[parameters('appsInstallFlag')]"
                },
                "aiCenterInstallFlag":{
                   "value":"[parameters('aiCenterInstallFlag')]"
                },
                "taskMiningInstallFlag":{
                   "value":"[parameters('taskMiningInstallFlag')]"
                },
                "documentUnderstandingInstallFlag":{
                   "value":"[parameters('documentUnderstandingInstallFlag')]"
                },
                "lbFQDN":{
                   "value":"[reference('Network').outputs.loadBalancerFQDN.value]"
                },
                "sqlFQDN":{
                   "value":"[reference('Database').outputs.SQLFQDN.value]"
                },
                "SQLServerAdminLogin":{
                   "reference":{
                      "keyVault":{
                         "id":"[reference('Vault').outputs.KVResourceId.value]"
                      },
                      "secretName":"SQLAdminUsername"
                   }
                },
                "SQLServerAdminPassword":{
                   "reference":{
                      "keyVault":{
                         "id":"[reference('Vault').outputs.KVResourceId.value]"
                      },
                      "secretName":"SQLAdminPassword"
                   }
                },
                "scriptUris":{
                   "value":"[variables('scriptUris')]"
                },
                "tagsByResource":{
                   "value":"[parameters('tagsByResource')]"
                }
             }
          }
       },
       {
          "type":"Microsoft.Resources/deployments",
          "apiVersion":"2019-10-01",
          "name":"DNS",
          "dependsOn":[
             "[resourceId('Microsoft.Resources/deployments', 'Compute')]",
             "[resourceId('Microsoft.Resources/deployments', 'Network')]"
          ],
          "tags":"[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deployments'), parameters('tagsByResource')['Microsoft.Resources/deployments'], json('{}')) ]",
          "properties":{
             "mode":"Incremental",
             "templateLink":{
                "uri":"[variables('dnsTemplateUri')]"
             },
             "parameters":{
                "baseName":{
                   "value":"[variables('baseName')]"
                },
                "lbPublicIpAddress":{
                   "value":"[reference('Network').outputs.loadBalancerPublicIpAddress.value]"
                },
                "lbFQDN":{
                   "value":"[reference('Network').outputs.loadBalancerFQDN.value]"
                },
                "tagsByResource":{
                   "value":"[parameters('tagsByResource')]"
                }
             }
          }
       }
    ],
    "outputs":{
       "JumpBoxVMPublicIp":{
          "type":"String",
          "value":"[reference('Network').outputs.JumpBoxVMPublicIp.value]"
       }
    }
 }